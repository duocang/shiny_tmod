ui <- fluidPage(
sliderInput("controller", "Controller", 0, 20, 10),
numericInput("inNumber", "Input number", 0),
numericInput("inNumber2", "Input number 2", 0)
)
server <- function(input, output, session) {
observeEvent(input$controller, {
# We'll use the input$controller variable multiple times, so save it as x
# for convenience.
x <- input$controller
updateNumericInput(session, "inNumber", value = x)
updateNumericInput(session, "inNumber2",
label = paste("Number label ", x),
value = x, min = x-10, max = x+10, step = 5)
})
}
shinyApp(ui, server)
}
runApp('code/shiny')
findFunction("getMset")
msig
head9
head(msig$MODULES)
HTML()
HTML("FOO")
HTML("FOO", a=1)
HTML("FOO", a=1, 198273)
runApp('code/shiny')
shiny::runApp('Desktop/shiny')
runApp('code/shiny')
runApp('code/shiny')
shiny::runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
library(data.table)
system.time('/Users/song/code/shiny/example/tt_1_TB.csv')
system.time(fread('/Users/song/code/shiny/example/tt_1_TB.csv'))
a <- fread('/Users/song/code/shiny/example/tt_1_TB.csv')
View(a)
b <- a[order(a$logFC)]
View(b)
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
a
c <- a[order(a[, -1])]
View(c)
s <- 'logFC'
a$s
c <- a[order(a[, 14]), ]
View(c)
d <- a[a$name =="logFC"]
d
View(d)
d <- a[a$name =="logFC", ]
View(d)
a$name == "logFC"
a[a$name == "logFC",]
a[, a$name == "logFC"]
ncol(a)
nco1(a$name=="logFC")
ncol(a$name=="logFC")
a.name
a.names
colnames(a)
colnames(a) == "ciL"
which(colnames(a) == "ciL")
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
help('cat')
runApp('Desktop/shiny/test')
shiny::runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
shiny::runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
shiny::runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
shinyApp(
ui = fluidPage(DT::dataTableOutput('tbl')),
server = function(input, output) {
output$tbl = DT::renderDataTable(
iris, options = list(lengthChange = FALSE)
)
}
)
shinyApp(
ui = fluidPage(DT::dataTableOutput('tbl'),
titlePanel("Uploading Files")),
server = function(input, output) {
output$tbl = DT::renderDataTable(
iris, options = list(lengthChange = FALSE)
)
}
)
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
shiny::runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
runApp('Desktop/shiny/test')
library(shiny); runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
install.packages("vcfR")
library(vcfR)
tumor.indel <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.indel.vcf")
tumor.snp <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.snp.vcf")
data.frame(tumor.indel)
data.frame(tumor.snp)
create.chromR((name='Supercontig', tumor.indel))
isGermlinePrefilter(tumor.indel)
library(vcfR)
tumor.indel <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.indel.vcf")
tumor.snp <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.snp.vcf")
isGermlinePrefilter <- function(x) {
grepl("Germline", x, fixed=TRUE)
}
isGermlinePrefilter(tumor.indel)
create.chromR((name='Supercontig', tumor.indel))
header(tumor.indel)
source("https://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation")
library(vcfR)
tumor.indel <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.indel.vcf")
tumor.snp <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.snp.vcf")
library(vcfR)
indel <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.indel.vcf")
snp <- read.vcfR("/Users/song/OneDrive/4/9/da/tumor.snp.vcf")
View(indel)
rownames(snp)
library(vcfR)
identical(rownames(snp), VCFlabels("/Users/song/OneDrive/4/9/da/tumor.snp.vcf"))
shiny::runApp('code/shiny/test')
shiny::runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
shiny::runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
shiny::runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
help("tabItem")
runApp('code/shiny/test')
shinyApp(ui, server)
rm(list = ls())
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Simple tabs"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Menu Item 1", tabName = "one", icon = icon("dashboard")),
menuItem("Menu Item 1", tabName = "two", icon = icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "one",h2("Dashboard tab content"),actionButton('switchtab', 'Switch tab')),
tabItem(tabName = "two",h2("Widgets tab content"))
)
)
)
server <- function(input, output, session) {
observeEvent(input$switchtab, {
newtab <- switch(input$tabs, "one" = "two","two" = "one")
updateTabItems(session, "tabs", newtab)
})
}
shinyApp(ui, server)
rm(list = ls())
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Simple tabs"),
dashboardSidebar(
sidebarMenu(id = "tabs",
menuItem("Menu Item 1", tabName = "one", icon = icon("dashboard")),
menuItem("Menu Item 1", tabName = "two", icon = icon("th"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "one",h2("Dashboard tab content"),actionButton('switchtab', 'Switch tab')),
tabItem(tabName = "two",h2("Widgets tab content"))
)
)
)
server <- function(input, output, session) {
observeEvent(input$switchtab, {
newtab <- switch(input$tabs, "one" = "two","two" = "one")
updateTabItems(session, "tabs", newtab)
})
}
shinyApp(ui, server)
runApp('Downloads')
runApp('Downloads')
runApp('Desktop/app copy.R')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
install.packages("markdown")
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
library(shiny); runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
runApp('Desktop/app copy.R')
install.packages("shinyBS")
install.packages("shinyBS")
runApp('Desktop/app copy.R')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
install.packages("ggplot2")
install.packages("plyr")
install.packages("plotly")
runApp('Downloads')
install.packages("ggthemes")
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('Downloads')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Downloads')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Downloads')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
install.packages("leaflet")
runApp('code/shiny/test')
runApp('code/R_Shiny/dataAnayltics')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('Desktop/app copy.R')
install.packages("rmarkdown")
runApp('Desktop/app copy.R')
runApp('Desktop/fads')
runApp('Desktop/app copy.R')
runApp('Desktop')
runApp('Desktop/fads')
runApp('Desktop/fads')
runApp('Desktop/fads')
runApp('Desktop/fads')
runApp('Desktop/fads')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
runApp('code/shiny/test')
install.packages("purbayes")
install.packages("PurBayes")
library("PurBayes")
install.packages("rjags")
install.packages("coda")
install.packages("coda")
library("coda")
library("rjags")
library("rjags")
library(rjags)
library(PurBayes)
install.packages("rjags")
library(rjags)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
library(rjags)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/4/rjags_4-4.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
library(rjags)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/4/rjags_4-4.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
install.packages("/Users/song/Downloads/rjags_4-4.tar.gz", repos = NULL, type="source")
library(rjags)
install.packages(pkgs = c("coda", "rjags", "runjags"),
repos = "http://cran.fhcrc.org/")
install.packages(pkgs = c("coda", "rjags", "runjags"), repos = "http://cran.fhcrc.org/")
library(rjags)
install.packages("rjags")
install.packages("R2jags")
library(rjags)
library(PurBayes)
library(PurBayes)
library(rjags)
install.packages("rjags", dependencies=TRUE,
> +       lib= "C:/Users/Margaret Donald/Documents/R/win-library/3.2")
trying URL 'https://cran.r-project.org/bin/windows/contrib/3.2/rjags_4-4.zip')
install.packages("rjags", dependencies=TRUE,
)
install.packages("PurBayes")
library(PurBayes)
install.packages("rjags")
library(rjags)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/3/rjags_3-2.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
install.packages("rjags")
library(rjags)
uninstall.packages("rjags")
remove.packages("rjags")
devtools::install_url("http://sourceforge.net/projects/mcmc-jags/files/rjags/4/rjags_4-4.tar.gz",
args="--configure-args='--with-jags-include=/Users/casallas/homebrew/opt/jags/include/JAGS
--with-jags-lib=/Users/casallas/homebrew/opt/jags/lib'
"
)
library(rjags)
library(PurBayes)
install.packages("rjags", configure.args="--enable-rpath")
library(PurBayes)
remove.packages("rjags")
remove.packages("rjags")
install.packages("rjags", configure.args="--with-jags...")
library(PurBayes)
install.packages("/Users/song/Downloads/rjags_4-4.tar.gz", repos = NULL, type="source")
library(R2jags)
library(rjags)
library(rjags)
library(PurBayes)
shiny::runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
help("actionButtion")
help("actionButton")
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
runApp('OneDrive/code/shiny/test')
